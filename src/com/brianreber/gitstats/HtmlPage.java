package com.brianreber.gitstats;

import java.io.File;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.json.JSONException;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public abstract class HtmlPage {

	protected final String projectTitle;
	protected final String pageTitle;
	protected final String fileName;

	public HtmlPage(String projectTitle, String fileName, String pageTitle) {
		this.fileName = fileName;
		this.projectTitle = projectTitle;
		this.pageTitle = pageTitle;
	}

	protected abstract String generateBody(List<Commit> commits) throws JSONException;

	public void generatePage(List<Commit> commits) {
		try {
			DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFactory.newDocumentBuilder();

			Document doc = docBuilder.newDocument();
			Element rootElement = doc.createElement("html");
			doc.appendChild(rootElement);

			Element head = doc.createElement("head");

			// Generate include for JSAPI
			Element script = doc.createElement("script");
			script.setAttribute("type", "text/javascript");
			script.setAttribute("src", "https://www.google.com/jsapi");
			head.appendChild(script);

			// Generate the JS for generating the graphs
			Element script2 = doc.createElement("script");
			script2.setAttribute("type", "text/javascript");
			script2.setTextContent(generateBody(commits));
			head.appendChild(script2);

			// Create the title
			Element title = doc.createElement("title");
			title.setTextContent(projectTitle + ": " + pageTitle);
			head.appendChild(title);

			// Add the head to the page
			rootElement.appendChild(head);

			// Generate the body
			Element body = doc.createElement("body");

			// Generate the top section of the page
			Element bodyHeading = doc.createElement("h2");
			bodyHeading.setTextContent(projectTitle + ": " + pageTitle);
			body.appendChild(bodyHeading);

			// Generate the Chart Div
			Element chartDiv = doc.createElement("div");
			chartDiv.setAttribute("id", "chart_div");
			body.appendChild(chartDiv);

			// TODO: generated by, copyright

			// Add the body to the html page
			rootElement.appendChild(body);

			// Generate HTML text
			TransformerFactory tf = TransformerFactory.newInstance();
			Transformer transformer;
			transformer = tf.newTransformer();

			DOMSource source = new DOMSource(doc);
			StreamResult result = new StreamResult(new File(fileName));
			transformer.transform(source, result);
		} catch (TransformerConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (TransformerException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (DOMException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}